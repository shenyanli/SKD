//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace SkdAdminClient.SkdWebService {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SkdWebService.SkdServiceSoap")]
    public interface SkdServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Login", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool Login(string userAccount, string pwd);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Login", ReplyAction="*")]
        System.IAsyncResult BeginLogin(string userAccount, string pwd, System.AsyncCallback callback, object asyncState);
        
        bool EndLogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLoginTotalTable", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetLoginTotalTable(string userVender, string userName, string userAccount, string loginDateBegin, string loginDateEnd);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetLoginTotalTable", ReplyAction="*")]
        System.IAsyncResult BeginGetLoginTotalTable(string userVender, string userName, string userAccount, string loginDateBegin, string loginDateEnd, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataTable EndGetLoginTotalTable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLoginDetailTable", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetLoginDetailTable(string userVender, string userName, string userAccount, string loginDateBegin, string loginDateEnd);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetLoginDetailTable", ReplyAction="*")]
        System.IAsyncResult BeginGetLoginDetailTable(string userVender, string userName, string userAccount, string loginDateBegin, string loginDateEnd, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataTable EndGetLoginDetailTable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProgressDetailTable", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetProgressDetailTable(string userVender, string userName, string userAccount, string courseName, string dateBegin, string dateEnd, string finishBegin, string finishEnd, int status);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetProgressDetailTable", ReplyAction="*")]
        System.IAsyncResult BeginGetProgressDetailTable(string userVender, string userName, string userAccount, string courseName, string dateBegin, string dateEnd, string finishBegin, string finishEnd, int status, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataTable EndGetProgressDetailTable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCourseStudyDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetCourseStudyDetails(string userAccount, string userName, string courseName, string vender, string beginDate, string endDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetCourseStudyDetails", ReplyAction="*")]
        System.IAsyncResult BeginGetCourseStudyDetails(string userAccount, string userName, string courseName, string vender, string beginDate, string endDate, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataTable EndGetCourseStudyDetails(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOrgList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetOrgList();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetOrgList", ReplyAction="*")]
        System.IAsyncResult BeginGetOrgList(System.AsyncCallback callback, object asyncState);
        
        string[] EndGetOrgList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCourseAddUp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetCourseAddUp(string courseName, string vender, string beginDate, string endDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetCourseAddUp", ReplyAction="*")]
        System.IAsyncResult BeginGetCourseAddUp(string courseName, string vender, string beginDate, string endDate, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataTable EndGetCourseAddUp(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCourseTable", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetCourseTable(string courseName);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetCourseTable", ReplyAction="*")]
        System.IAsyncResult BeginGetCourseTable(string courseName, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataTable EndGetCourseTable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCourseName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetCourseName();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetCourseName", ReplyAction="*")]
        System.IAsyncResult BeginGetCourseName(System.AsyncCallback callback, object asyncState);
        
        string[] EndGetCourseName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTrainningRecord", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetTrainningRecord(string userName, string userAccount, string courseName, string beginDate, string endDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetTrainningRecord", ReplyAction="*")]
        System.IAsyncResult BeginGetTrainningRecord(string userName, string userAccount, string courseName, string beginDate, string endDate, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataTable EndGetTrainningRecord(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTime", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetTime();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetTime", ReplyAction="*")]
        System.IAsyncResult BeginGetTime(System.AsyncCallback callback, object asyncState);
        
        string EndGetTime(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface SkdServiceSoapChannel : SkdAdminClient.SkdWebService.SkdServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLoginTotalTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLoginTotalTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLoginDetailTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLoginDetailTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetProgressDetailTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetProgressDetailTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCourseStudyDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCourseStudyDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetOrgListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetOrgListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCourseAddUpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCourseAddUpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCourseTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCourseTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCourseNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCourseNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTrainningRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTrainningRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SkdServiceSoapClient : System.ServiceModel.ClientBase<SkdAdminClient.SkdWebService.SkdServiceSoap>, SkdAdminClient.SkdWebService.SkdServiceSoap {
        
        private BeginOperationDelegate onBeginLoginDelegate;
        
        private EndOperationDelegate onEndLoginDelegate;
        
        private System.Threading.SendOrPostCallback onLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLoginTotalTableDelegate;
        
        private EndOperationDelegate onEndGetLoginTotalTableDelegate;
        
        private System.Threading.SendOrPostCallback onGetLoginTotalTableCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLoginDetailTableDelegate;
        
        private EndOperationDelegate onEndGetLoginDetailTableDelegate;
        
        private System.Threading.SendOrPostCallback onGetLoginDetailTableCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetProgressDetailTableDelegate;
        
        private EndOperationDelegate onEndGetProgressDetailTableDelegate;
        
        private System.Threading.SendOrPostCallback onGetProgressDetailTableCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCourseStudyDetailsDelegate;
        
        private EndOperationDelegate onEndGetCourseStudyDetailsDelegate;
        
        private System.Threading.SendOrPostCallback onGetCourseStudyDetailsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetOrgListDelegate;
        
        private EndOperationDelegate onEndGetOrgListDelegate;
        
        private System.Threading.SendOrPostCallback onGetOrgListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCourseAddUpDelegate;
        
        private EndOperationDelegate onEndGetCourseAddUpDelegate;
        
        private System.Threading.SendOrPostCallback onGetCourseAddUpCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCourseTableDelegate;
        
        private EndOperationDelegate onEndGetCourseTableDelegate;
        
        private System.Threading.SendOrPostCallback onGetCourseTableCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCourseNameDelegate;
        
        private EndOperationDelegate onEndGetCourseNameDelegate;
        
        private System.Threading.SendOrPostCallback onGetCourseNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTrainningRecordDelegate;
        
        private EndOperationDelegate onEndGetTrainningRecordDelegate;
        
        private System.Threading.SendOrPostCallback onGetTrainningRecordCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTimeDelegate;
        
        private EndOperationDelegate onEndGetTimeDelegate;
        
        private System.Threading.SendOrPostCallback onGetTimeCompletedDelegate;
        
        public SkdServiceSoapClient() {
        }
        
        public SkdServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SkdServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SkdServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SkdServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<LoginCompletedEventArgs> LoginCompleted;
        
        public event System.EventHandler<GetLoginTotalTableCompletedEventArgs> GetLoginTotalTableCompleted;
        
        public event System.EventHandler<GetLoginDetailTableCompletedEventArgs> GetLoginDetailTableCompleted;
        
        public event System.EventHandler<GetProgressDetailTableCompletedEventArgs> GetProgressDetailTableCompleted;
        
        public event System.EventHandler<GetCourseStudyDetailsCompletedEventArgs> GetCourseStudyDetailsCompleted;
        
        public event System.EventHandler<GetOrgListCompletedEventArgs> GetOrgListCompleted;
        
        public event System.EventHandler<GetCourseAddUpCompletedEventArgs> GetCourseAddUpCompleted;
        
        public event System.EventHandler<GetCourseTableCompletedEventArgs> GetCourseTableCompleted;
        
        public event System.EventHandler<GetCourseNameCompletedEventArgs> GetCourseNameCompleted;
        
        public event System.EventHandler<GetTrainningRecordCompletedEventArgs> GetTrainningRecordCompleted;
        
        public event System.EventHandler<GetTimeCompletedEventArgs> GetTimeCompleted;
        
        public bool Login(string userAccount, string pwd) {
            return base.Channel.Login(userAccount, pwd);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLogin(string userAccount, string pwd, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogin(userAccount, pwd, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndLogin(System.IAsyncResult result) {
            return base.Channel.EndLogin(result);
        }
        
        private System.IAsyncResult OnBeginLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userAccount = ((string)(inValues[0]));
            string pwd = ((string)(inValues[1]));
            return this.BeginLogin(userAccount, pwd, callback, asyncState);
        }
        
        private object[] OnEndLogin(System.IAsyncResult result) {
            bool retVal = this.EndLogin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoginCompleted(object state) {
            if ((this.LoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoginCompleted(this, new LoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoginAsync(string userAccount, string pwd) {
            this.LoginAsync(userAccount, pwd, null);
        }
        
        public void LoginAsync(string userAccount, string pwd, object userState) {
            if ((this.onBeginLoginDelegate == null)) {
                this.onBeginLoginDelegate = new BeginOperationDelegate(this.OnBeginLogin);
            }
            if ((this.onEndLoginDelegate == null)) {
                this.onEndLoginDelegate = new EndOperationDelegate(this.OnEndLogin);
            }
            if ((this.onLoginCompletedDelegate == null)) {
                this.onLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoginCompleted);
            }
            base.InvokeAsync(this.onBeginLoginDelegate, new object[] {
                        userAccount,
                        pwd}, this.onEndLoginDelegate, this.onLoginCompletedDelegate, userState);
        }
        
        public System.Data.DataTable GetLoginTotalTable(string userVender, string userName, string userAccount, string loginDateBegin, string loginDateEnd) {
            return base.Channel.GetLoginTotalTable(userVender, userName, userAccount, loginDateBegin, loginDateEnd);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetLoginTotalTable(string userVender, string userName, string userAccount, string loginDateBegin, string loginDateEnd, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLoginTotalTable(userVender, userName, userAccount, loginDateBegin, loginDateEnd, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataTable EndGetLoginTotalTable(System.IAsyncResult result) {
            return base.Channel.EndGetLoginTotalTable(result);
        }
        
        private System.IAsyncResult OnBeginGetLoginTotalTable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userVender = ((string)(inValues[0]));
            string userName = ((string)(inValues[1]));
            string userAccount = ((string)(inValues[2]));
            string loginDateBegin = ((string)(inValues[3]));
            string loginDateEnd = ((string)(inValues[4]));
            return this.BeginGetLoginTotalTable(userVender, userName, userAccount, loginDateBegin, loginDateEnd, callback, asyncState);
        }
        
        private object[] OnEndGetLoginTotalTable(System.IAsyncResult result) {
            System.Data.DataTable retVal = this.EndGetLoginTotalTable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLoginTotalTableCompleted(object state) {
            if ((this.GetLoginTotalTableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLoginTotalTableCompleted(this, new GetLoginTotalTableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLoginTotalTableAsync(string userVender, string userName, string userAccount, string loginDateBegin, string loginDateEnd) {
            this.GetLoginTotalTableAsync(userVender, userName, userAccount, loginDateBegin, loginDateEnd, null);
        }
        
        public void GetLoginTotalTableAsync(string userVender, string userName, string userAccount, string loginDateBegin, string loginDateEnd, object userState) {
            if ((this.onBeginGetLoginTotalTableDelegate == null)) {
                this.onBeginGetLoginTotalTableDelegate = new BeginOperationDelegate(this.OnBeginGetLoginTotalTable);
            }
            if ((this.onEndGetLoginTotalTableDelegate == null)) {
                this.onEndGetLoginTotalTableDelegate = new EndOperationDelegate(this.OnEndGetLoginTotalTable);
            }
            if ((this.onGetLoginTotalTableCompletedDelegate == null)) {
                this.onGetLoginTotalTableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLoginTotalTableCompleted);
            }
            base.InvokeAsync(this.onBeginGetLoginTotalTableDelegate, new object[] {
                        userVender,
                        userName,
                        userAccount,
                        loginDateBegin,
                        loginDateEnd}, this.onEndGetLoginTotalTableDelegate, this.onGetLoginTotalTableCompletedDelegate, userState);
        }
        
        public System.Data.DataTable GetLoginDetailTable(string userVender, string userName, string userAccount, string loginDateBegin, string loginDateEnd) {
            return base.Channel.GetLoginDetailTable(userVender, userName, userAccount, loginDateBegin, loginDateEnd);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetLoginDetailTable(string userVender, string userName, string userAccount, string loginDateBegin, string loginDateEnd, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLoginDetailTable(userVender, userName, userAccount, loginDateBegin, loginDateEnd, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataTable EndGetLoginDetailTable(System.IAsyncResult result) {
            return base.Channel.EndGetLoginDetailTable(result);
        }
        
        private System.IAsyncResult OnBeginGetLoginDetailTable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userVender = ((string)(inValues[0]));
            string userName = ((string)(inValues[1]));
            string userAccount = ((string)(inValues[2]));
            string loginDateBegin = ((string)(inValues[3]));
            string loginDateEnd = ((string)(inValues[4]));
            return this.BeginGetLoginDetailTable(userVender, userName, userAccount, loginDateBegin, loginDateEnd, callback, asyncState);
        }
        
        private object[] OnEndGetLoginDetailTable(System.IAsyncResult result) {
            System.Data.DataTable retVal = this.EndGetLoginDetailTable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLoginDetailTableCompleted(object state) {
            if ((this.GetLoginDetailTableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLoginDetailTableCompleted(this, new GetLoginDetailTableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLoginDetailTableAsync(string userVender, string userName, string userAccount, string loginDateBegin, string loginDateEnd) {
            this.GetLoginDetailTableAsync(userVender, userName, userAccount, loginDateBegin, loginDateEnd, null);
        }
        
        public void GetLoginDetailTableAsync(string userVender, string userName, string userAccount, string loginDateBegin, string loginDateEnd, object userState) {
            if ((this.onBeginGetLoginDetailTableDelegate == null)) {
                this.onBeginGetLoginDetailTableDelegate = new BeginOperationDelegate(this.OnBeginGetLoginDetailTable);
            }
            if ((this.onEndGetLoginDetailTableDelegate == null)) {
                this.onEndGetLoginDetailTableDelegate = new EndOperationDelegate(this.OnEndGetLoginDetailTable);
            }
            if ((this.onGetLoginDetailTableCompletedDelegate == null)) {
                this.onGetLoginDetailTableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLoginDetailTableCompleted);
            }
            base.InvokeAsync(this.onBeginGetLoginDetailTableDelegate, new object[] {
                        userVender,
                        userName,
                        userAccount,
                        loginDateBegin,
                        loginDateEnd}, this.onEndGetLoginDetailTableDelegate, this.onGetLoginDetailTableCompletedDelegate, userState);
        }
        
        public System.Data.DataTable GetProgressDetailTable(string userVender, string userName, string userAccount, string courseName, string dateBegin, string dateEnd, string finishBegin, string finishEnd, int status) {
            return base.Channel.GetProgressDetailTable(userVender, userName, userAccount, courseName, dateBegin, dateEnd, finishBegin, finishEnd, status);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetProgressDetailTable(string userVender, string userName, string userAccount, string courseName, string dateBegin, string dateEnd, string finishBegin, string finishEnd, int status, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetProgressDetailTable(userVender, userName, userAccount, courseName, dateBegin, dateEnd, finishBegin, finishEnd, status, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataTable EndGetProgressDetailTable(System.IAsyncResult result) {
            return base.Channel.EndGetProgressDetailTable(result);
        }
        
        private System.IAsyncResult OnBeginGetProgressDetailTable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userVender = ((string)(inValues[0]));
            string userName = ((string)(inValues[1]));
            string userAccount = ((string)(inValues[2]));
            string courseName = ((string)(inValues[3]));
            string dateBegin = ((string)(inValues[4]));
            string dateEnd = ((string)(inValues[5]));
            string finishBegin = ((string)(inValues[6]));
            string finishEnd = ((string)(inValues[7]));
            int status = ((int)(inValues[8]));
            return this.BeginGetProgressDetailTable(userVender, userName, userAccount, courseName, dateBegin, dateEnd, finishBegin, finishEnd, status, callback, asyncState);
        }
        
        private object[] OnEndGetProgressDetailTable(System.IAsyncResult result) {
            System.Data.DataTable retVal = this.EndGetProgressDetailTable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetProgressDetailTableCompleted(object state) {
            if ((this.GetProgressDetailTableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetProgressDetailTableCompleted(this, new GetProgressDetailTableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetProgressDetailTableAsync(string userVender, string userName, string userAccount, string courseName, string dateBegin, string dateEnd, string finishBegin, string finishEnd, int status) {
            this.GetProgressDetailTableAsync(userVender, userName, userAccount, courseName, dateBegin, dateEnd, finishBegin, finishEnd, status, null);
        }
        
        public void GetProgressDetailTableAsync(string userVender, string userName, string userAccount, string courseName, string dateBegin, string dateEnd, string finishBegin, string finishEnd, int status, object userState) {
            if ((this.onBeginGetProgressDetailTableDelegate == null)) {
                this.onBeginGetProgressDetailTableDelegate = new BeginOperationDelegate(this.OnBeginGetProgressDetailTable);
            }
            if ((this.onEndGetProgressDetailTableDelegate == null)) {
                this.onEndGetProgressDetailTableDelegate = new EndOperationDelegate(this.OnEndGetProgressDetailTable);
            }
            if ((this.onGetProgressDetailTableCompletedDelegate == null)) {
                this.onGetProgressDetailTableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetProgressDetailTableCompleted);
            }
            base.InvokeAsync(this.onBeginGetProgressDetailTableDelegate, new object[] {
                        userVender,
                        userName,
                        userAccount,
                        courseName,
                        dateBegin,
                        dateEnd,
                        finishBegin,
                        finishEnd,
                        status}, this.onEndGetProgressDetailTableDelegate, this.onGetProgressDetailTableCompletedDelegate, userState);
        }
        
        public System.Data.DataTable GetCourseStudyDetails(string userAccount, string userName, string courseName, string vender, string beginDate, string endDate) {
            return base.Channel.GetCourseStudyDetails(userAccount, userName, courseName, vender, beginDate, endDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCourseStudyDetails(string userAccount, string userName, string courseName, string vender, string beginDate, string endDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCourseStudyDetails(userAccount, userName, courseName, vender, beginDate, endDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataTable EndGetCourseStudyDetails(System.IAsyncResult result) {
            return base.Channel.EndGetCourseStudyDetails(result);
        }
        
        private System.IAsyncResult OnBeginGetCourseStudyDetails(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userAccount = ((string)(inValues[0]));
            string userName = ((string)(inValues[1]));
            string courseName = ((string)(inValues[2]));
            string vender = ((string)(inValues[3]));
            string beginDate = ((string)(inValues[4]));
            string endDate = ((string)(inValues[5]));
            return this.BeginGetCourseStudyDetails(userAccount, userName, courseName, vender, beginDate, endDate, callback, asyncState);
        }
        
        private object[] OnEndGetCourseStudyDetails(System.IAsyncResult result) {
            System.Data.DataTable retVal = this.EndGetCourseStudyDetails(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCourseStudyDetailsCompleted(object state) {
            if ((this.GetCourseStudyDetailsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCourseStudyDetailsCompleted(this, new GetCourseStudyDetailsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCourseStudyDetailsAsync(string userAccount, string userName, string courseName, string vender, string beginDate, string endDate) {
            this.GetCourseStudyDetailsAsync(userAccount, userName, courseName, vender, beginDate, endDate, null);
        }
        
        public void GetCourseStudyDetailsAsync(string userAccount, string userName, string courseName, string vender, string beginDate, string endDate, object userState) {
            if ((this.onBeginGetCourseStudyDetailsDelegate == null)) {
                this.onBeginGetCourseStudyDetailsDelegate = new BeginOperationDelegate(this.OnBeginGetCourseStudyDetails);
            }
            if ((this.onEndGetCourseStudyDetailsDelegate == null)) {
                this.onEndGetCourseStudyDetailsDelegate = new EndOperationDelegate(this.OnEndGetCourseStudyDetails);
            }
            if ((this.onGetCourseStudyDetailsCompletedDelegate == null)) {
                this.onGetCourseStudyDetailsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCourseStudyDetailsCompleted);
            }
            base.InvokeAsync(this.onBeginGetCourseStudyDetailsDelegate, new object[] {
                        userAccount,
                        userName,
                        courseName,
                        vender,
                        beginDate,
                        endDate}, this.onEndGetCourseStudyDetailsDelegate, this.onGetCourseStudyDetailsCompletedDelegate, userState);
        }
        
        public string[] GetOrgList() {
            return base.Channel.GetOrgList();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetOrgList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetOrgList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string[] EndGetOrgList(System.IAsyncResult result) {
            return base.Channel.EndGetOrgList(result);
        }
        
        private System.IAsyncResult OnBeginGetOrgList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetOrgList(callback, asyncState);
        }
        
        private object[] OnEndGetOrgList(System.IAsyncResult result) {
            string[] retVal = this.EndGetOrgList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetOrgListCompleted(object state) {
            if ((this.GetOrgListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetOrgListCompleted(this, new GetOrgListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetOrgListAsync() {
            this.GetOrgListAsync(null);
        }
        
        public void GetOrgListAsync(object userState) {
            if ((this.onBeginGetOrgListDelegate == null)) {
                this.onBeginGetOrgListDelegate = new BeginOperationDelegate(this.OnBeginGetOrgList);
            }
            if ((this.onEndGetOrgListDelegate == null)) {
                this.onEndGetOrgListDelegate = new EndOperationDelegate(this.OnEndGetOrgList);
            }
            if ((this.onGetOrgListCompletedDelegate == null)) {
                this.onGetOrgListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetOrgListCompleted);
            }
            base.InvokeAsync(this.onBeginGetOrgListDelegate, null, this.onEndGetOrgListDelegate, this.onGetOrgListCompletedDelegate, userState);
        }
        
        public System.Data.DataTable GetCourseAddUp(string courseName, string vender, string beginDate, string endDate) {
            return base.Channel.GetCourseAddUp(courseName, vender, beginDate, endDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCourseAddUp(string courseName, string vender, string beginDate, string endDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCourseAddUp(courseName, vender, beginDate, endDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataTable EndGetCourseAddUp(System.IAsyncResult result) {
            return base.Channel.EndGetCourseAddUp(result);
        }
        
        private System.IAsyncResult OnBeginGetCourseAddUp(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string courseName = ((string)(inValues[0]));
            string vender = ((string)(inValues[1]));
            string beginDate = ((string)(inValues[2]));
            string endDate = ((string)(inValues[3]));
            return this.BeginGetCourseAddUp(courseName, vender, beginDate, endDate, callback, asyncState);
        }
        
        private object[] OnEndGetCourseAddUp(System.IAsyncResult result) {
            System.Data.DataTable retVal = this.EndGetCourseAddUp(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCourseAddUpCompleted(object state) {
            if ((this.GetCourseAddUpCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCourseAddUpCompleted(this, new GetCourseAddUpCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCourseAddUpAsync(string courseName, string vender, string beginDate, string endDate) {
            this.GetCourseAddUpAsync(courseName, vender, beginDate, endDate, null);
        }
        
        public void GetCourseAddUpAsync(string courseName, string vender, string beginDate, string endDate, object userState) {
            if ((this.onBeginGetCourseAddUpDelegate == null)) {
                this.onBeginGetCourseAddUpDelegate = new BeginOperationDelegate(this.OnBeginGetCourseAddUp);
            }
            if ((this.onEndGetCourseAddUpDelegate == null)) {
                this.onEndGetCourseAddUpDelegate = new EndOperationDelegate(this.OnEndGetCourseAddUp);
            }
            if ((this.onGetCourseAddUpCompletedDelegate == null)) {
                this.onGetCourseAddUpCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCourseAddUpCompleted);
            }
            base.InvokeAsync(this.onBeginGetCourseAddUpDelegate, new object[] {
                        courseName,
                        vender,
                        beginDate,
                        endDate}, this.onEndGetCourseAddUpDelegate, this.onGetCourseAddUpCompletedDelegate, userState);
        }
        
        public System.Data.DataTable GetCourseTable(string courseName) {
            return base.Channel.GetCourseTable(courseName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCourseTable(string courseName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCourseTable(courseName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataTable EndGetCourseTable(System.IAsyncResult result) {
            return base.Channel.EndGetCourseTable(result);
        }
        
        private System.IAsyncResult OnBeginGetCourseTable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string courseName = ((string)(inValues[0]));
            return this.BeginGetCourseTable(courseName, callback, asyncState);
        }
        
        private object[] OnEndGetCourseTable(System.IAsyncResult result) {
            System.Data.DataTable retVal = this.EndGetCourseTable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCourseTableCompleted(object state) {
            if ((this.GetCourseTableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCourseTableCompleted(this, new GetCourseTableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCourseTableAsync(string courseName) {
            this.GetCourseTableAsync(courseName, null);
        }
        
        public void GetCourseTableAsync(string courseName, object userState) {
            if ((this.onBeginGetCourseTableDelegate == null)) {
                this.onBeginGetCourseTableDelegate = new BeginOperationDelegate(this.OnBeginGetCourseTable);
            }
            if ((this.onEndGetCourseTableDelegate == null)) {
                this.onEndGetCourseTableDelegate = new EndOperationDelegate(this.OnEndGetCourseTable);
            }
            if ((this.onGetCourseTableCompletedDelegate == null)) {
                this.onGetCourseTableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCourseTableCompleted);
            }
            base.InvokeAsync(this.onBeginGetCourseTableDelegate, new object[] {
                        courseName}, this.onEndGetCourseTableDelegate, this.onGetCourseTableCompletedDelegate, userState);
        }
        
        public string[] GetCourseName() {
            return base.Channel.GetCourseName();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCourseName(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCourseName(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string[] EndGetCourseName(System.IAsyncResult result) {
            return base.Channel.EndGetCourseName(result);
        }
        
        private System.IAsyncResult OnBeginGetCourseName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCourseName(callback, asyncState);
        }
        
        private object[] OnEndGetCourseName(System.IAsyncResult result) {
            string[] retVal = this.EndGetCourseName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCourseNameCompleted(object state) {
            if ((this.GetCourseNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCourseNameCompleted(this, new GetCourseNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCourseNameAsync() {
            this.GetCourseNameAsync(null);
        }
        
        public void GetCourseNameAsync(object userState) {
            if ((this.onBeginGetCourseNameDelegate == null)) {
                this.onBeginGetCourseNameDelegate = new BeginOperationDelegate(this.OnBeginGetCourseName);
            }
            if ((this.onEndGetCourseNameDelegate == null)) {
                this.onEndGetCourseNameDelegate = new EndOperationDelegate(this.OnEndGetCourseName);
            }
            if ((this.onGetCourseNameCompletedDelegate == null)) {
                this.onGetCourseNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCourseNameCompleted);
            }
            base.InvokeAsync(this.onBeginGetCourseNameDelegate, null, this.onEndGetCourseNameDelegate, this.onGetCourseNameCompletedDelegate, userState);
        }
        
        public System.Data.DataTable GetTrainningRecord(string userName, string userAccount, string courseName, string beginDate, string endDate) {
            return base.Channel.GetTrainningRecord(userName, userAccount, courseName, beginDate, endDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetTrainningRecord(string userName, string userAccount, string courseName, string beginDate, string endDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTrainningRecord(userName, userAccount, courseName, beginDate, endDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataTable EndGetTrainningRecord(System.IAsyncResult result) {
            return base.Channel.EndGetTrainningRecord(result);
        }
        
        private System.IAsyncResult OnBeginGetTrainningRecord(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userName = ((string)(inValues[0]));
            string userAccount = ((string)(inValues[1]));
            string courseName = ((string)(inValues[2]));
            string beginDate = ((string)(inValues[3]));
            string endDate = ((string)(inValues[4]));
            return this.BeginGetTrainningRecord(userName, userAccount, courseName, beginDate, endDate, callback, asyncState);
        }
        
        private object[] OnEndGetTrainningRecord(System.IAsyncResult result) {
            System.Data.DataTable retVal = this.EndGetTrainningRecord(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTrainningRecordCompleted(object state) {
            if ((this.GetTrainningRecordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTrainningRecordCompleted(this, new GetTrainningRecordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTrainningRecordAsync(string userName, string userAccount, string courseName, string beginDate, string endDate) {
            this.GetTrainningRecordAsync(userName, userAccount, courseName, beginDate, endDate, null);
        }
        
        public void GetTrainningRecordAsync(string userName, string userAccount, string courseName, string beginDate, string endDate, object userState) {
            if ((this.onBeginGetTrainningRecordDelegate == null)) {
                this.onBeginGetTrainningRecordDelegate = new BeginOperationDelegate(this.OnBeginGetTrainningRecord);
            }
            if ((this.onEndGetTrainningRecordDelegate == null)) {
                this.onEndGetTrainningRecordDelegate = new EndOperationDelegate(this.OnEndGetTrainningRecord);
            }
            if ((this.onGetTrainningRecordCompletedDelegate == null)) {
                this.onGetTrainningRecordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTrainningRecordCompleted);
            }
            base.InvokeAsync(this.onBeginGetTrainningRecordDelegate, new object[] {
                        userName,
                        userAccount,
                        courseName,
                        beginDate,
                        endDate}, this.onEndGetTrainningRecordDelegate, this.onGetTrainningRecordCompletedDelegate, userState);
        }
        
        public string GetTime() {
            return base.Channel.GetTime();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetTime(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTime(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetTime(System.IAsyncResult result) {
            return base.Channel.EndGetTime(result);
        }
        
        private System.IAsyncResult OnBeginGetTime(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetTime(callback, asyncState);
        }
        
        private object[] OnEndGetTime(System.IAsyncResult result) {
            string retVal = this.EndGetTime(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTimeCompleted(object state) {
            if ((this.GetTimeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTimeCompleted(this, new GetTimeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTimeAsync() {
            this.GetTimeAsync(null);
        }
        
        public void GetTimeAsync(object userState) {
            if ((this.onBeginGetTimeDelegate == null)) {
                this.onBeginGetTimeDelegate = new BeginOperationDelegate(this.OnBeginGetTime);
            }
            if ((this.onEndGetTimeDelegate == null)) {
                this.onEndGetTimeDelegate = new EndOperationDelegate(this.OnEndGetTime);
            }
            if ((this.onGetTimeCompletedDelegate == null)) {
                this.onGetTimeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTimeCompleted);
            }
            base.InvokeAsync(this.onBeginGetTimeDelegate, null, this.onEndGetTimeDelegate, this.onGetTimeCompletedDelegate, userState);
        }
    }
}
