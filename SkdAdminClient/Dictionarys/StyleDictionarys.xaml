<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:SkdAdminClient">

    <Style x:Key="DataGridColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Background" Value="ForestGreen" />
        <Setter Property="Foreground" Value="White" />
        <Style.Triggers>
            <Trigger Property="SortDirection" Value="{x:Null}">
                <Setter Property="Background" Value="{DynamicResource DataGridHeaderBackgroundBrush}" />
                <Setter Property="BorderBrush" Value="Transparent" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="SortDirection" Value="{x:Null}" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource DataGridHeaderMouseOverBackgroundBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource DataGridHeaderBorderBrush}" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="true" />
                    <Condition Property="SortDirection" Value="{x:Null}" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource DataGridHeaderMouseOverBackgroundBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource DataGridHeaderBorderBrush}" />
            </MultiTrigger>
            <Trigger Property="SortDirection" Value="Ascending">
                <Setter Property="Background" Value="{DynamicResource DataGridHeaderSortedBackgroundBrush}" />
            </Trigger>
            <Trigger Property="SortDirection" Value="Descending">
                <Setter Property="Background" Value="{DynamicResource DataGridHeaderSortedBackgroundBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DatagridColumnHeaderCustomTemplateStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="28" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Border
                            x:Name="BackgroundBorder"
                            Grid.ColumnSpan="2"
                            Background="{DynamicResource DataGridHeaderSortedBackgroundBrush}"
                            BorderBrush="{DynamicResource DataGridHeaderSortedBorderBrush}"
                            BorderThickness="0,1,0,1" />
                        <ContentPresenter
                            Grid.Column="0"
                            Margin="6,3,6,3"
                            VerticalAlignment="Center" />
                        <Path
                            x:Name="SortArrow"
                            Grid.Column="1"
                            Width="8"
                            Height="6"
                            Margin="0,0,8,0"
                            VerticalAlignment="Center"
                            Data="M0,0 L1,0 0.5,1 z"
                            Fill="White"
                            RenderTransformOrigin="0.5,0.4"
                            Stretch="Fill"
                            Visibility="Collapsed" />
                        <Rectangle
                            Grid.Column="0"
                            Grid.ColumnSpan="2"
                            Width="1"
                            HorizontalAlignment="Right"
                            Fill="#AAC377" />

                        <Rectangle
                            Grid.Column="0"
                            Grid.ColumnSpan="2"
                            Width="1"
                            Margin="0,0,1,0"
                            HorizontalAlignment="Right"
                            Fill="#425B10" />
                        <Thumb
                            x:Name="PART_LeftHeaderGripper"
                            Grid.Column="0"
                            HorizontalAlignment="Left"
                            Style="{StaticResource ColumnHeaderGripperStyle}" />
                        <Thumb
                            x:Name="PART_RightHeaderGripper"
                            Grid.Column="0"
                            HorizontalAlignment="Right"
                            Style="{StaticResource ColumnHeaderGripperStyle}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="SortDirection" Value="{x:Null}">
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{DynamicResource DataGridHeaderBackgroundBrush}" />
                            <Setter TargetName="BackgroundBorder" Property="BorderBrush" Value="Transparent" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="SortDirection" Value="{x:Null}" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource DataGridHeaderMouseOverBackgroundBrush}" />
                            <Setter TargetName="BackgroundBorder" Property="BorderBrush" Value="{StaticResource DataGridHeaderBorderBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="SortDirection" Value="{x:Null}" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource DataGridHeaderMouseOverBackgroundBrush}" />
                            <Setter TargetName="BackgroundBorder" Property="BorderBrush" Value="{StaticResource DataGridHeaderBorderBrush}" />
                        </MultiTrigger>

                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                            <Setter TargetName="SortArrow" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="DisplayIndex" Value="0">
                            <Setter TargetName="PART_LeftHeaderGripper" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  窗体关闭按钮  -->
    <Style x:Key="TopRightCloseButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Canvas>
                            <Ellipse
                                x:Name="elps"
                                Width="40"
                                Height="40"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Stroke="ForestGreen" />
                            <Path
                                x:Name="pth_cross"
                                Canvas.Left="1"
                                Canvas.Top="3.5"
                                Width="30"
                                Height="30"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="M10.909415,0 L14.909415,0 14.909415,10.202308 25,10.202308 25,14.202307 14.909415,14.202307 14.909415,25 10.909415,25 10.909415,14.202307 0,14.202307 0,10.202308 10.909415,10.202308 z"
                                Fill="ForestGreen"
                                RenderTransformOrigin="0.750,0.550"
                                Stretch="Fill">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform Angle="-45" />
                                        <TranslateTransform X="3.226" Y="-3.616" />
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                            <ContentPresenter
                                x:Name="contentPresenter"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Canvas>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True" />
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="elps" Property="Fill" Value="LimeGreen" />

                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="elps" Property="Fill">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.443,1.22">
                                        <LinearGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform CenterX="0.5" CenterY="0.5" />
                                                <SkewTransform CenterX="0.5" CenterY="0.5" />
                                                <RotateTransform Angle="-50" CenterX="0.5" CenterY="0.5" />
                                                <TranslateTransform />
                                            </TransformGroup>
                                        </LinearGradientBrush.RelativeTransform>
                                        <GradientStop Offset="1" Color="ForestGreen" />
                                        <GradientStop Offset="0" Color="LimeGreen" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="contentPresenter" Property="Margin" Value="5,5,0,0" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="MinButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Canvas>
                            <Ellipse
                                x:Name="elps"
                                Width="40"
                                Height="40"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Stroke="ForestGreen" />
                            <Path
                                x:Name="pth_cross"
                                Canvas.Left="1"
                                Canvas.Top="3"
                                Width="30"
                                Height="30"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="M0,0 L0,15 z"
                                Fill="ForestGreen"
                                Stroke="ForestGreen"
                                StrokeThickness="10">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform Angle="-90" />
                                        <TranslateTransform X="4" Y="18" />
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                            <ContentPresenter
                                x:Name="contentPresenter"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Canvas>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True" />
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="elps" Property="Fill" Value="LimeGreen" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="elps" Property="Fill">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.443,1.22">
                                        <LinearGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform CenterX="0.5" CenterY="0.5" />
                                                <SkewTransform CenterX="0.5" CenterY="0.5" />
                                                <RotateTransform Angle="-90" CenterX="0.5" CenterY="0.5" />
                                                <TranslateTransform />
                                            </TransformGroup>
                                        </LinearGradientBrush.RelativeTransform>
                                        <GradientStop Offset="1" Color="ForestGreen" />
                                        <GradientStop Offset="0" Color="LimeGreen" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="contentPresenter" Property="Margin" Value="5,5,0,0" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--  玻璃效果样式  -->
    <GradientStopCollection x:Key="MyGlassGradientStopsResource">
        <GradientStop Offset="0.2" Color="WhiteSmoke" />
        <GradientStop Offset="0.4" Color="Transparent" />
        <GradientStop Offset="0.5" Color="WhiteSmoke" />
        <GradientStop Offset="0.75" Color="Transparent" />
        <GradientStop Offset="0.9" Color="WhiteSmoke" />
        <GradientStop Offset="1" Color="Transparent" />
    </GradientStopCollection>

    <!--  渐变画笔实现玻璃效果  -->
    <LinearGradientBrush x:Key="MyGlassBrushResource" GradientStops="{StaticResource MyGlassGradientStopsResource}" Opacity="0.75" StartPoint="0,0" EndPoint="1,1" />

    <!--  按钮背景颜色  -->
    <LinearGradientBrush x:Key="GrayBlueGradientBrush" StartPoint="0,0" EndPoint="1,1">
        <GradientStop Offset="0" Color="LightGreen" />
        <GradientStop Offset="0.5" Color="AliceBlue" />
        <GradientStop Offset="1" Color="LightGreen" />
    </LinearGradientBrush>

    <!--  按钮效果添加  -->
    <Style x:Key="BackButton" TargetType="{x:Type Button}">
        <!--  添加按钮背景色  -->
        <Setter Property="Background" Value="{StaticResource GrayBlueGradientBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">

                        <!--  外边框 StrokeThickness轮廓的宽度  -->
                        <Rectangle
                            x:Name="outerRectangle"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Fill="Transparent"
                            RadiusX="20"
                            RadiusY="20"
                            Stroke="{TemplateBinding Background}"
                            StrokeThickness="5" />

                        <!--  内容框  -->
                        <Rectangle
                            x:Name="innerRectangle"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Fill="{TemplateBinding Background}"
                            RadiusX="20"
                            RadiusY="20"
                            Stroke="Transparent"
                            StrokeThickness="20" />

                        <!--  玻璃框  -->
                        <Rectangle
                            x:Name="glassCube"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Fill="{StaticResource MyGlassBrushResource}"
                            Opacity="0"
                            RadiusX="10"
                            RadiusY="10"
                            RenderTransformOrigin="0.5,0.5"
                            StrokeThickness="2">
                            <Rectangle.Stroke>
                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStop Offset="0.0" Color="#FFD4F8D4" />
                                        <GradientStop Offset="1.0" Color="Azure" />
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Rectangle.Stroke>

                            <!--  获取或设置影响此元素呈现位置的转换信息  -->
                            <Rectangle.RenderTransform>
                                <TransformGroup>
                                    <!--  沿水平或垂直方向拉伸或收缩对象  -->
                                    <ScaleTransform />
                                    <!--  围绕点 CenterX 和 CenterY 将对象旋转指定的 Angle  -->
                                    <RotateTransform />
                                </TransformGroup>
                            </Rectangle.RenderTransform>

                        </Rectangle>

                        <!--  DockPanel定义一个区域，从中可以相对于彼此水平或垂直排列子元素。  -->
                        <DockPanel Name="myContentPresenterDockPanel">
                            <!--  ContentPresenter显示 ContentControl 的内容。  -->
                            <ContentPresenter
                                x:Name="myContentPresenter"
                                Margin="10"
                                HorizontalAlignment="Center"
                                Content="{TemplateBinding Content}"
                                TextBlock.Foreground="ForestGreen" />
                        </DockPanel>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!--  设置鼠标悬停触发器  -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <!--  外边框颜色  -->
                            <!--<Setter TargetName="outerRectangle" Property="Rectangle.Stroke" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />-->
                            <Setter TargetName="glassCube" Property="Rectangle.Opacity" Value="1" />
                        </Trigger>

                        <!--  鼠标离开按钮后 继续完成动画  -->
                        <Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="glassCube" Property="Rectangle.Opacity" Value="1" />
                            <!--<Setter TargetName="outerRectangle" Property="Rectangle.Stroke" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />-->
                            <Setter TargetName="glassCube" Property="Rectangle.Opacity" Value="1" />
                        </Trigger>

                        <!--  事件触发器  -->
                        <EventTrigger RoutedEvent="Mouse.MouseEnter">
                            <EventTrigger.Actions>
                                <BeginStoryboard Name="mouseEnterBeginStoryboard">
                                    <Storyboard>
                                        <DoubleAnimation
                                            By="-0.1"
                                            Storyboard.TargetName="glassCube"
                                            Storyboard.TargetProperty="(Rectangle.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                            Duration="0:0:0.5" />
                                        <DoubleAnimation
                                            By="-0.1"
                                            Storyboard.TargetName="glassCube"
                                            Storyboard.TargetProperty="(Rectangle.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                            Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Mouse.MouseLeave">
                            <EventTrigger.Actions>
                                <StopStoryboard BeginStoryboardName="mouseEnterBeginStoryboard" />
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Button.Click">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            By="360"
                                            Storyboard.TargetName="glassCube"
                                            Storyboard.TargetProperty="(Rectangle.RenderTransform).(TransformGroup.Children)[1].(RotateTransform.Angle)"
                                            Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>